"use strict";

/* Напишите функцию sumTo(n), которая вычисляет сумму чисел 1 + 2 + ... + n.
Например:
sumTo(1) = 1
sumTo(2) = 2 + 1 = 3
sumTo(3) = 3 + 2 + 1 = 6
sumTo(4) = 4 + 3 + 2 + 1 = 10
...
sumTo(100) = 100 + 99 + ... + 2 + 1 = 5050
Сделайте три варианта решения:

С использованием цикла.
Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) for n > 1.
С использованием формулы арифметической прогрессии.
Пример работы вашей функции:

alert( sumTo(100) ); // 5050
P.S. Какой вариант решения самый быстрый? Самый медленный? Почему?

P.P.S. Можно ли при помощи рекурсии посчитать sumTo(100000)? */

function sumTo(n) {
  let result = 0;

  while (n != 0) {
    if (n < 0) break;
    result += n;
    n--;
  }
  return result;
}



function sumToRecursion(n) {               //глубина рекурсии может быть примерно 10000 вложенных вызовов
  if (n == 1) return 1;
  return n + sumToRecursion(n - 1);
}



function sumToAProgressive(n) {                  //думаю решение по арифм. прогрессии самое быстрое
  return n * (n + 1) / 2;
}

